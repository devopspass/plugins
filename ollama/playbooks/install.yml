---
- name: Install
  hosts: localhost
  connection: local
  vars:
    arch_mapping:
      x86_64: amd64
      aarch64: arm64
  tasks:
    - name: Base tasks
      ansible.builtin.include_tasks:
        file: "../../_common/playbooks/base.yml"

    - name: Check if the operating system is Linux or macOS
      ansible.builtin.set_fact:
        archive_type: "{{ (ansible_system == 'Windows') | ternary('.exe', '') }}"
        binary_name: "ollama"

    - name: Fetch latest version from GitHub releases
      ansible.builtin.uri:
        url: "https://api.github.com/repos/ollama/ollama/releases/latest"
        return_content: true
        headers:
          Accept: "application/vnd.github.v3+json"
      register: version_response

    - name: Parse latest version
      ansible.builtin.set_fact:
        latest_version: "{{ version_response.json.tag_name | regex_replace('^v', '') }}"

    - name: Set version
      ansible.builtin.set_fact:
        install_version: "{{ (req_version == 'latest') | ternary(latest_version, req_version) }}"

    - ansible.builtin.set_fact:
        url: "https://github.com/ollama/ollama/releases/download/v{{ install_version }}/{{ binary_name }}-{{ ansible_system | lower }}-{{ arch_mapping[ansible_architecture] | default('amd64') }}{{ archive_type }}"
      when: ansible_system != 'Darwin'

    - ansible.builtin.set_fact:
        url: "https://github.com/ollama/ollama/releases/download/v{{ install_version }}/{{ binary_name }}-{{ ansible_system | lower }}{{ archive_type }}"
      when: ansible_system == 'Darwin'

    - name: Download binary archive
      ansible.builtin.get_url:
        url: "{{ url }}"
        dest: "{{ (dop_bin, binary_name + archive_type) | path_join }}"

    - name: Set permissions for binary
      ansible.builtin.file:
        path: "{{ dop_bin }}/{{ binary_name }}"
        mode: "+x"
      when: ansible_system != 'Windows'
