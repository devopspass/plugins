---
- name: Install HashiCorp Vault client
  hosts: localhost
  connection: local
  vars:
    arch_mapping:  # Map ansible architecture {{ ansible_architecture }} names to Docker's architecture names
      x86_64: amd64
      aarch64: arm64
  tasks:
    - name: Base tasks
      ansible.builtin.include_tasks:
        file: "../../_common/playbooks/base.yml"

    - name: Fetch latest Vault version from HashiCorp releases
      ansible.builtin.uri:
        url: "https://api.github.com/repos/hashicorp/vault/releases/latest"
        return_content: true
        headers:
          Accept: "application/vnd.github.v3+json"
      register: vault_version_response

    - name: Parse latest Vault version
      ansible.builtin.set_fact:
        latest_vault_version: "{{ vault_version_response.json.tag_name | regex_replace('^v', '') }}"

    - name: Set version
      ansible.builtin.set_fact:
        vault_version: "{{ (req_vault_version == 'latest') | ternary(latest_vault_version, req_vault_version)}}"

#####################################################################
#
#           Linux/MacOS
#
#####################################################################
    - name: Install Vault on macOS/Linux
      block:
        - name: Set facts based on operating system
          ansible.builtin.set_fact:
            vault_download_url: "https://releases.hashicorp.com/vault/{{ vault_version }}/vault_{{ vault_version }}_{{ ansible_system | lower }}_{{ arch_mapping[ansible_architecture] }}.zip"

        - name: Download Vault binary
          ansible.builtin.get_url:
            url: "{{ vault_download_url }}"
            dest: "{{ dop_temp }}/vault.zip"

        - name: Unzip Vault binary
          ansible.builtin.unarchive:
            src: "{{ dop_temp }}/vault.zip"
            dest: "{{ dop_temp }}/"

        - name: Move Vault binary
          ansible.builtin.command:
            cmd: "mv {{ vault_path }} {{ ansible_env.HOME }}/bin/"
            removes: "{{ vault_path }}"
          vars:
            vault_path: "{{ dop_temp }}/vault"

        - name: Remove Vault temporary folder
          ansible.builtin.file:
            path: "{{ dop_temp }}/vault.zip"
            state: absent

      when: "'Darwin' in ansible_system or 'Linux' in ansible_system"

#####################################################################
#
#           Windows
#
#####################################################################
    - name: Install Vault on Windows
      when: "'Windows' in ansible_system"
      block:
        - name: Set facts based on operating system
          ansible.builtin.set_fact:
            vault_download_url: "https://releases.hashicorp.com/vault/{{ vault_version }}/vault_{{ vault_version }}_windows_{{ arch_mapping[ansible_architecture] }}.zip"

        - name: Download Vault binary
          ansible.builtin.get_url:
            url: "{{ vault_download_url }}"
            dest: "{{ dop_temp }}\\\\vault.zip"

        - name: Extract Vault binary
          ansible.builtin.command:
            cmd: "tar -xf vault.zip"
            chdir: "{{ dop_temp }}"

        - name: Move Vault binary
          ansible.builtin.command:
            cmd: "move {{ vault_path }} {{ dop_bin | regex_escape }}"
          vars:
            vault_path: "{{ dop_temp | regex_escape }}\\\\vault.exe"

    - name: Vault version
      ansible.builtin.debug:
        msg: "Installed Vault version is {{ vault_version }}"
