---
- name: Install Docker
  hosts: localhost
  connection: local
  vars:
    arch_mapping:  # Map ansible architecture {{ ansible_architecture }} names to Docker's architecture names
      x86_64: amd64
      aarch64: arm64
  tasks:
    - name: Base tasks
      ansible.builtin.include_tasks:
        file: "../../_common/playbooks/base.yml"

    - name: Docker Desktop for Windows
      block:
        - name: Check if Docker Desktop is installed
          ansible.builtin.command: Get-WmiObject -Class Win32_Product | Where-Object {$_.Name -like "*Docker Desktop*"}
          register: docker_desktop_installed
          ignore_errors: yes

        - name: Download Docker Desktop installer
          ansible.builtin.get_url:
            url: "https://desktop.docker.com/win/main/amd64/Docker%20Desktop%20Installer.exe"
            dest: "{{ dop_temp }}/Docker-Desktop-Installer.exe"
          when: docker_desktop_installed is not succeeded

        - name: Install Docker Desktop
          ansible.builtin.command: "{{ dop_temp | regex_escape }}/Docker-Desktop-Installer.exe"
          when: docker_desktop_installed is not succeeded

      when: ansible_os_family == 'Windows'

    - name: Install Docker on Ubuntu
      become_exe: pkexec
      block:
        - name: Update apt cache
          ansible.builtin.apt:
            update_cache: true
          become: true

        - name: Add Docker's official GPG key
          ansible.builtin.apt_key:
            url: https://download.docker.com/linux/ubuntu/gpg
          become: true

        - name: Add Docker repository
          ansible.builtin.apt_repository:
            repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
            state: present
          become: true

        - name: Update apt cache
          ansible.builtin.apt:
            update_cache: true
          become: true

        - name: Install Docker Engine
          ansible.builtin.package:
            name: docker-ce
            state: present
          become: true

        - name: Enable and start Docker service on Ubuntu
          become: true
          ansible.builtin.service:
            name: docker
            state: started
            enabled: true
      when:
        - ansible_distribution == 'Ubuntu'

    - name: Install Docker on RHEL based distros
      block:
        - name: Install required packages for Docker
          ansible.builtin.yum:
            name: "{{ item }}"
            state: present
          with_items:
            - yum-utils
            - device-mapper-persistent-data
            - lvm2
        - name: Set up Docker repository
          ansible.builtin.shell: yum-config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo
        - name: Install Docker Engine
          ansible.builtin.yum:
            name: docker-ce
            state: present
      when: ansible_os_family == 'Linux' and ansible_distribution in ['CentOS', 'RedHat']

    - name: Install Docker on Mac
      block:
        - name: Install Docker
          ansible.builtin.command:
            cmd: brew install docker
          environment:
             HOMEBREW_NO_AUTO_UPDATE: true
        - name: Install Docker net connect - https://github.com/chipmk/docker-mac-net-connect
          ansible.builtin.command:
            cmd: brew install chipmk/tap/docker-mac-net-connect
          environment:
             HOMEBREW_NO_AUTO_UPDATE: true
        - name: Install Docker
          ansible.builtin.command:
            cmd: osascript -e "do shell script \"brew services start chipmk/tap/docker-mac-net-connect\" with administrator privileges"
